{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "Core network creation across 3 AZs. Subnets, route tables, NACLs, IGW, NAT , VGW and security groups are created.",
  "Parameters" : {
    "CorporateCidrIp" : {
      "Description" : "Corporate CidrIp (to restrict traffic to only the corporate IP space)",
      "Type" : "String",
      "Default" :  "10.0.0.0/8"
    },
    "VPCCidr" : {
      "Description" : "CIDR block for entire VPC (e.g. 10.1.2.3/22)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "PresentationSubnetCidrAZ1" : {
      "Description" : "CIDR block for subnet containing the Presentation Servers (e.g. 10.1.2.3/25)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "PresentationSubnetCidrAZ2" : {
      "Description" : "CIDR block for subnet containing the Presentation Servers (e.g. 10.1.2.3/25)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "PresentationSubnetCidrAZ3" : {
      "Description" : "CIDR block for subnet containing the Presentation Servers (e.g. 10.1.2.3/25)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "ApplicationSubnetCidrAZ1" : {
      "Description" : "CIDR block for subnet containing the Application Servers (e.g. 10.1.2.3/25)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "ApplicationSubnetCidrAZ2" : {
      "Description" : "CIDR block for subnet containing the Application Servers (e.g. 10.1.2.3/25)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "ApplicationSubnetCidrAZ3" : {
      "Description" : "CIDR block for subnet containing the Application Servers (e.g. 10.1.2.3/25)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "DatabaseSubnetCidrAZ1" : {
      "Description" : "CIDR block for subnet containing any databases (e.g. 10.1.2.3/25)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "DatabaseSubnetCidrAZ2" : {
      "Description" : "CIDR block for subnet containing any databases (e.g. 10.1.2.3/25)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "DatabaseSubnetCidrAZ3" : {
      "Description" : "CIDR block for subnet containing any databases (e.g. 10.1.2.3/25)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "InternetLoadBalancerSubnetCidrAZ1" : {
      "Description" : "CIDR block for subnet containing the internet facing load balancers (e.g. 10.1.2.3/26)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "InternetLoadBalancerSubnetCidrAZ2" : {
      "Description" : "CIDR block for subnet containing the internet facing load balancers (e.g. 10.1.2.3/26)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "InternetLoadBalancerSubnetCidrAZ3" : {
      "Description" : "CIDR block for subnet containing the internet facing load balancers (e.g. 10.1.2.3/26)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "InternalLoadBalancerSubnetCidrAZ1" : {
      "Description" : "CIDR block for subnet containing the internal facing load balancers (e.g. 10.1.2.3/26)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "InternalLoadBalancerSubnetCidrAZ2" : {
      "Description" : "CIDR block for subnet containing the internal facing load balancers (e.g. 10.1.2.3/26)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "InternalLoadBalancerSubnetCidrAZ3" : {
      "Description" : "CIDR block for subnet containing the internal facing load balancers (e.g. 10.1.2.3/26)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "AppName" : {
      "Description" : "What is the name of the application? This is used to tag resources",
      "Type": "String",
      "MinLength": "3",
      "MaxLength": "25",
      "AllowedPattern" : "[a-z1-9]*",
      "ConstraintDescription": "must be all lower case with no spaces"
    },
    "EnvironmentName" : {
      "Description" : "What is the environment type, e.g. alpha/beta/prod/test.",
      "Type": "String",
      "AllowedValues" : [ "alpha","beta","prod","test","dev","stg","prd","tst" ],
      "ConstraintDescription": "must be either dev, stg, prod, tst, alpha, beta, prod or test."
    }
  },
  "Mappings" : {},
  "Conditions" : {
      "ProvisionProdResources" : {"Fn::Or" : [
      {"Fn::Equals" : ["prd", {"Ref" : "EnvironmentName"}]},
      {"Fn::Equals" : ["prod", {"Ref" : "EnvironmentName"}]}
      ]},
      "ProvisionNonProdResources" : {"Fn::Or" : [
      {"Fn::Equals" : ["alpha", {"Ref" : "EnvironmentName"}]},
      {"Fn::Equals" : ["beta", {"Ref" : "EnvironmentName"}]},
      {"Fn::Equals" : ["dev", {"Ref" : "EnvironmentName"}]},
      {"Fn::Equals" : ["stg", {"Ref" : "EnvironmentName"}]},
      {"Fn::Equals" : ["test", {"Ref" : "EnvironmentName"}]}
      ]}
  },

  "Resources" : {
    "NATAZ1" : {
      "DependsOn" : "InternetGateway",
      "Type" : "AWS::EC2::NatGateway",
      "Properties" : {
        "AllocationId" : { "Fn::GetAtt" : ["NATEIPAZ1", "AllocationId"]},
        "SubnetId" : { "Ref" : "InternetLoadBalancerSubnetAZ1"}
      }
    },
    "NATAZ2" : {
      "DependsOn" : "InternetGateway",
      "Condition" : "ProvisionProdResources",
      "Type" : "AWS::EC2::NatGateway",
      "Properties" : {
        "AllocationId" : { "Fn::GetAtt" : ["NATEIPAZ2", "AllocationId"]},
        "SubnetId" : { "Ref" : "InternetLoadBalancerSubnetAZ2"}
      }
    },

    "NATAZ3" : {
      "DependsOn" : "InternetGateway",
      "Condition" : "ProvisionProdResources",
      "Type" : "AWS::EC2::NatGateway",
      "Properties" : {
        "AllocationId" : { "Fn::GetAtt" : ["NATEIPAZ3", "AllocationId"]},
        "SubnetId" : { "Ref" : "InternetLoadBalancerSubnetAZ3"}
      }
    },

    "NATEIPAZ1" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc"
      }
    },

    "NATEIPAZ2" : {
      "Type" : "AWS::EC2::EIP",
      "Condition" : "ProvisionProdResources",
      "Properties" : {
        "Domain" : "vpc"
      }
    },

    "NATEIPAZ3" : {
      "Type" : "AWS::EC2::EIP",
      "Condition" : "ProvisionProdResources",
      "Properties" : {
        "Domain" : "vpc"
      }
    },

     "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : { "Ref" : "VPCCidr" },
        "EnableDnsSupport" : "true",
        "EnableDnsHostnames" : "true",
        "Tags" : [
          {
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AppName" }, { "Ref" : "EnvironmentName" }] ] }
          },
          {
            "Key" : "app",
            "Value" : { "Ref" : "AppName" }
          },
          {
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          {
            "Key" : "layer",
            "Value" : "network"
          }
        ]
      }
    },

    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
          {
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AppName" }, { "Ref" : "EnvironmentName" }] ] }
          },
          {
            "Key" : "app",
            "Value" : { "Ref" : "AppName" }
          },
          {
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          {
            "Key" : "layer",
            "Value" : "network"
          }
        ]
      }
    },

    "AttachInternetGateway" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },

    "VirtualPrivateGateway" : {
      "Type" : "AWS::EC2::VPNGateway",
      "Properties" : {
        "Type" : "ipsec.1",
        "Tags" : [
          {
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AppName" }, { "Ref" : "EnvironmentName" }] ] }
          },
          {
            "Key" : "app",
            "Value" : { "Ref" : "AppName" }
          },
          {
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          {
            "Key" : "layer",
            "Value" : "network"
          }
        ]
      }
   },

   "AttachIVirtualPrivateGateway" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "VpnGatewayId" : { "Ref" : "VirtualPrivateGateway" }
       }
    },

    "PresentationSubnetAZ1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "PresentationSubnetCidrAZ1" },
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ] },
        "Tags" : [
          {
            "Key" : "purpose",
            "Value" : "presentation"
          },
          {
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          {
            "Key" : "network",
            "Value" : "internal"
          },
          {
            "Key" : "Name",
            "Value" : "presentation"
          }
        ]
      }
    },
    "PresentationSubnetAZ2" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "PresentationSubnetCidrAZ2" },
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" } ] },
        "Tags" : [
          {
            "Key" : "purpose",
            "Value" : "presentation"
          },
          {
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          {
            "Key" : "network",
            "Value" : "internal"
          },
          {
            "Key" : "Name",
            "Value" : "presentation"
          }
        ]
      }
    },
    "PresentationSubnetAZ3" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "PresentationSubnetCidrAZ3" },
        "AvailabilityZone" : { "Fn::Select" : [ "2", { "Fn::GetAZs" : "" } ] },
        "Tags" : [
          {
            "Key" : "purpose",
            "Value" : "presentation"
          },
          {
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          {
            "Key" : "network",
            "Value" : "internal"
          },
          {
            "Key" : "Name",
            "Value" : "presentation"
          }
        ]
      }
    },

    "ApplicationSubnetAZ1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "ApplicationSubnetCidrAZ1" },
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ] },
        "Tags" : [
          {
            "Key" : "purpose",
            "Value" : "application"
          },
          {
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          {
            "Key" : "network",
            "Value" : "internal"
          },
          {
            "Key" : "Name",
            "Value" : "application"
          }
        ]
      }
    },
    "ApplicationSubnetAZ2" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "ApplicationSubnetCidrAZ2" },
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" } ] },
        "Tags" : [
          {
            "Key" : "purpose",
            "Value" : "application"
          },
          {
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          {
            "Key" : "network",
            "Value" : "internal"
          },
          {
            "Key" : "Name",
            "Value" : "application"
          }
        ]
      }
    },
    "ApplicationSubnetAZ3" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "ApplicationSubnetCidrAZ3" },
        "AvailabilityZone" : { "Fn::Select" : [ "2", { "Fn::GetAZs" : "" } ] },
        "Tags" : [
          {
            "Key" : "purpose",
            "Value" : "application"
          },
          {
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          {
            "Key" : "network",
            "Value" : "internal"
          },
          {
            "Key" : "Name",
            "Value" : "application"
          }
        ]
      }
    },

    "DatabaseSubnetAZ1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "DatabaseSubnetCidrAZ1" },
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ] },
        "Tags" : [
          {
            "Key" : "purpose",
            "Value" : "database"
          },
          {
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          {
            "Key" : "network",
            "Value" : "internal"
          },
          {
            "Key" : "Name",
            "Value" : "database"
          }
        ]
      }
    },

    "DatabaseSubnetAZ2" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "DatabaseSubnetCidrAZ2" },
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" } ] },
        "Tags" : [
          {
            "Key" : "purpose",
            "Value" : "database"
          },
          {
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          {
            "Key" : "network",
            "Value" : "internal"
          },
          {
            "Key" : "Name",
            "Value" : "database"
          }
        ]
      }
    },
    "DatabaseSubnetAZ3" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "DatabaseSubnetCidrAZ3" },
        "AvailabilityZone" : { "Fn::Select" : [ "2", { "Fn::GetAZs" : "" } ] },
        "Tags" : [
          {
            "Key" : "purpose",
            "Value" : "database"
          },
          {
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          {
            "Key" : "network",
            "Value" : "internal"
          },
          {
            "Key" : "Name",
            "Value" : "database"
          }
        ]
      }
    },

    "InternetLoadBalancerSubnetAZ1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "InternetLoadBalancerSubnetCidrAZ1" },
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ] },
        "Tags" : [
          {
            "Key" : "purpose",
            "Value" : "internet load balancers"
          },
          {
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          {
            "Key" : "network",
            "Value" : "internet"
          },
          {
            "Key" : "Name",
            "Value" : "internet load balancers"
          }
        ]
      }
    },

    "InternetLoadBalancerSubnetAZ2" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "InternetLoadBalancerSubnetCidrAZ2" },
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" } ] },
        "Tags" : [
          {
            "Key" : "purpose",
            "Value" : "internet load balancers"
          },
          {
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          {
            "Key" : "network",
            "Value" : "internet"
          },
          {
            "Key" : "Name",
            "Value" : "internet load balancers"
          }
        ]
      }
    },
    "InternetLoadBalancerSubnetAZ3" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "InternetLoadBalancerSubnetCidrAZ3" },
        "AvailabilityZone" : { "Fn::Select" : [ "2", { "Fn::GetAZs" : "" } ] },
        "Tags" : [
          {
            "Key" : "purpose",
            "Value" : "internet load balancers"
          },
          {
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          {
            "Key" : "network",
            "Value" : "internet"
          },
          {
            "Key" : "Name",
            "Value" : "internet load balancers"
          }
        ]
      }
    },

    "InternalLoadBalancerSubnetAZ1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "InternalLoadBalancerSubnetCidrAZ1" },
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ] },
        "Tags" : [
          {
            "Key" : "purpose",
            "Value" : "internal load balancers"
          },
          {
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          {
            "Key" : "network",
            "Value" : "internal"
          },
          {
            "Key" : "Name",
            "Value" : "internal load balancers"
          }
        ]
      }
    },

    "InternalLoadBalancerSubnetAZ2" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "InternalLoadBalancerSubnetCidrAZ2" },
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" } ] },
        "Tags" : [
          {
            "Key" : "purpose",
            "Value" : "internal load balancers"
          },
          {
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          {
            "Key" : "network",
            "Value" : "internal"
          },
          {
            "Key" : "Name",
            "Value" : "internal load balancers"
          }
        ]
      }
    },
    "InternalLoadBalancerSubnetAZ3" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "InternalLoadBalancerSubnetCidrAZ3" },
        "AvailabilityZone" : { "Fn::Select" : [ "2", { "Fn::GetAZs" : "" } ] },
        "Tags" : [
          {
            "Key" : "purpose",
            "Value" : "internal load balancers"
          },
          {
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          {
            "Key" : "network",
            "Value" : "internal"
          },
          {
            "Key" : "Name",
            "Value" : "internal load balancers"
          }
        ]
      }
    },

    "InternetRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "DependsOn" : "AttachIVirtualPrivateGateway",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [
          {
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AppName" }, { "Ref" : "EnvironmentName" },"internet"] ] }
          },
          {
            "Key" : "purpose",
            "Value" : "internet"
          },
          {
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          {
            "Key" : "network",
            "Value" : "internet"
          }
        ]
      }
    },

    "VGWRoutePropInternetRouteTable" : {
      "Type" : "AWS::EC2::VPNGatewayRoutePropagation",
      "Properties" : {
        "RouteTableIds" : [{"Ref" : "InternetRouteTable"}],
        "VpnGatewayId" : {"Ref" : "VirtualPrivateGateway"}
      }
    },

    "InternalRouteTableAZ1" : {
      "Type" : "AWS::EC2::RouteTable",
      "DependsOn" : "AttachIVirtualPrivateGateway",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [
          {
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AppName" }, { "Ref" : "EnvironmentName" },"internal-", { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ] }] ] }
          },
          {
            "Key" : "purpose",
            "Value" : "internal"
          },
          {
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          {
            "Key" : "network",
            "Value" : "internal"
          }
        ]
      }
    },

    "InternalRouteTableAZ2" : {
      "Type" : "AWS::EC2::RouteTable",
      "DependsOn" : "AttachIVirtualPrivateGateway",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [
          {
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AppName" }, { "Ref" : "EnvironmentName" },"internal-", { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" } ] }] ] }
          },
          {
            "Key" : "purpose",
            "Value" : "internal"
          },
          {
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          {
            "Key" : "network",
            "Value" : "internal"
          }
        ]
      }
    },

    "InternalRouteTableAZ3" : {
      "Type" : "AWS::EC2::RouteTable",
      "DependsOn" : "AttachIVirtualPrivateGateway",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [
          {
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AppName" }, { "Ref" : "EnvironmentName" },"internal-", { "Fn::Select" : [ "2", { "Fn::GetAZs" : "" } ] }] ] }
          },
          {
            "Key" : "purpose",
            "Value" : "internal"
          },
          {
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          {
            "Key" : "network",
            "Value" : "internal"
          }
        ]
      }
    },

    "VGWRoutePropInternalRouteTable" : {
      "Type" : "AWS::EC2::VPNGatewayRoutePropagation",
      "Properties" : {
        "RouteTableIds" : [{"Ref" : "InternalRouteTableAZ1"}, {"Ref" : "InternalRouteTableAZ2"}, {"Ref" : "InternalRouteTableAZ3"}],
        "VpnGatewayId" : {"Ref" : "VirtualPrivateGateway"}
      }
    },

    "InternetRoute" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "InternetRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },

    "InternalRouteAZ1" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "InternalRouteTableAZ1" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NatGatewayId" : { "Ref" : "NATAZ1" }
      }
    },

    "InternalRouteAZ2PRD" : {
      "Type" : "AWS::EC2::Route",
      "Condition" : "ProvisionProdResources",
      "Properties" : {
        "RouteTableId" : { "Ref" : "InternalRouteTableAZ2" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NatGatewayId" : { "Ref" : "NATAZ2" }
      }
    },

    "InternalRouteAZ3PRD" : {
      "Type" : "AWS::EC2::Route",
      "Condition" : "ProvisionProdResources",
      "Properties" : {
        "RouteTableId" : { "Ref" : "InternalRouteTableAZ3" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NatGatewayId" : { "Ref" : "NATAZ3" }
      }
    },

    "InternalRouteAZ2NonPRD" : {
      "Type" : "AWS::EC2::Route",
      "Condition" : "ProvisionNonProdResources",
      "Properties" : {
        "RouteTableId" : { "Ref" : "InternalRouteTableAZ2" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NatGatewayId" : { "Ref" : "NATAZ1" }
      }
    },

    "InternalRouteAZ3NonPRD" : {
      "Type" : "AWS::EC2::Route",
      "Condition" : "ProvisionNonProdResources",
      "Properties" : {
        "RouteTableId" : { "Ref" : "InternalRouteTableAZ3" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NatGatewayId" : { "Ref" : "NATAZ1" }
      }
    },

    "InternetLoadBalancersSubnetRouteTableAssociation1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "InternetLoadBalancerSubnetAZ1" },
        "RouteTableId" : { "Ref" : "InternetRouteTable" }
      }
    },

    "InternetLoadBalancersSubnetRouteTableAssociation2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "InternetLoadBalancerSubnetAZ2" },
        "RouteTableId" : { "Ref" : "InternetRouteTable" }
      }
    },
    "InternetLoadBalancersSubnetRouteTableAssociation3" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "InternetLoadBalancerSubnetAZ3" },
        "RouteTableId" : { "Ref" : "InternetRouteTable" }
      }
    },

    "InternalLoadBalancersSubnetRouteTableAssociation1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "InternalLoadBalancerSubnetAZ1" },
        "RouteTableId" : { "Ref" : "InternalRouteTableAZ1" }
      }
    },

    "InternalLoadBalancersSubnetRouteTableAssociation2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "InternalLoadBalancerSubnetAZ2" },
        "RouteTableId" : { "Ref" : "InternalRouteTableAZ2" }
      }
    },
    "InternalLoadBalancersSubnetRouteTableAssociation3" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "InternalLoadBalancerSubnetAZ3" },
        "RouteTableId" : { "Ref" : "InternalRouteTableAZ3" }
      }
    },

    "ApplicationSubnetRouteTableAssociation1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "ApplicationSubnetAZ1" },
        "RouteTableId" : { "Ref" : "InternalRouteTableAZ1" }
      }
    },
    "ApplicationSubnetRouteTableAssociation2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "ApplicationSubnetAZ2" },
        "RouteTableId" : { "Ref" : "InternalRouteTableAZ2" }
      }
    },
    "ApplicationSubnetRouteTableAssociation3" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "ApplicationSubnetAZ3" },
        "RouteTableId" : { "Ref" : "InternalRouteTableAZ3" }
      }
    },

    "PresentationSubnetRouteTableAssociation1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PresentationSubnetAZ1" },
        "RouteTableId" : { "Ref" : "InternalRouteTableAZ1" }
      }
    },
    "PresentationSubnetRouteTableAssociation2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PresentationSubnetAZ2" },
        "RouteTableId" : { "Ref" : "InternalRouteTableAZ2" }
      }
    },
    "PresentationSubnetRouteTableAssociation3" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PresentationSubnetAZ3" },
        "RouteTableId" : { "Ref" : "InternalRouteTableAZ3" }
      }
    },

    "DatabaseSubnetRouteTableAssociation1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DatabaseSubnetAZ1" },
        "RouteTableId" : { "Ref" : "InternalRouteTableAZ1" }
      }
    },
    "DatabaseSubnetRouteTableAssociation2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DatabaseSubnetAZ2" },
        "RouteTableId" : { "Ref" : "InternalRouteTableAZ2" }
      }
    },
    "DatabaseSubnetRouteTableAssociation3" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DatabaseSubnetAZ3" },
        "RouteTableId" : { "Ref" : "InternalRouteTableAZ3" }
      }
    },

    "InternetSubnetAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [
          {
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AppName" }, { "Ref" : "EnvironmentName" },"internet"] ] }
          },
          {
            "Key" : "layer",
            "Value" : "network"
          },
          {
            "Key" : "purpose",
            "Value" : "internet"
          },
          {
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          }
        ]
      }
    },

    "InternalSubnetAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [
          {
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AppName" }, { "Ref" : "EnvironmentName" },"internal"] ] }
          },
          {
            "Key" : "layer",
            "Value" : "network"
          },
          {
            "Key" : "purpose",
            "Value" : "internal"
          },
          {
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          }
        ]
      }
    },

    "InternetInSubnetAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "InternetSubnetAcl"},
        "RuleNumber" : "32000",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "Icmp" : { "Code" : "-1", "Type" : "-1"},
        "PortRange" : {"From" : "1", "To" : "65535"}
      }
    },

    "InternetOutSubnetAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "InternetSubnetAcl"},
        "RuleNumber" : "32000",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "Icmp" : { "Code" : "-1", "Type" : "-1"},
        "PortRange" : {"From" : "1", "To" : "65535"}
      }
    },

    "InternalInSubnetAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "InternalSubnetAcl"},
        "RuleNumber" : "32000",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "Icmp" : { "Code" : "-1", "Type" : "-1"},
        "PortRange" : {"From" : "1", "To" : "65535"}
      }
    },

    "InternalOutSubnetAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "InternalSubnetAcl"},
        "RuleNumber" : "32000",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "Icmp" : { "Code" : "-1", "Type" : "-1"},
        "PortRange" : {"From" : "1", "To" : "65535"}
      }
    },

    "InternetSubnetAclAssociation11" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "InternetLoadBalancerSubnetAZ1" },
        "NetworkAclId" : {"Ref" : "InternetSubnetAcl"}
      }
    },

    "InternetSubnetAclAssociation12" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "InternetLoadBalancerSubnetAZ2" },
        "NetworkAclId" : {"Ref" : "InternetSubnetAcl"}
      }
    },

    "InternetSubnetAclAssociation13" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "InternetLoadBalancerSubnetAZ3" },
        "NetworkAclId" : {"Ref" : "InternetSubnetAcl"}
      }
    },
    "InternalSubnetAclAssociation11" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "ApplicationSubnetAZ1" },
        "NetworkAclId" : {"Ref" : "InternalSubnetAcl"}
      }
    },

    "InternalSubnetAclAssociation12" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "ApplicationSubnetAZ2" },
        "NetworkAclId" : {"Ref" : "InternalSubnetAcl"}
      }
    },
    "InternalSubnetAclAssociation13" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "ApplicationSubnetAZ3" },
        "NetworkAclId" : {"Ref" : "InternalSubnetAcl"}
      }
    },

    "InternalSubnetAclAssociation21" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "InternalLoadBalancerSubnetAZ1" },
        "NetworkAclId" : {"Ref" : "InternalSubnetAcl"}
      }
    },

    "InternalSubnetAclAssociation22" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "InternalLoadBalancerSubnetAZ2" },
        "NetworkAclId" : {"Ref" : "InternalSubnetAcl"}
      }
    },
    "InternalSubnetAclAssociation23" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "InternalLoadBalancerSubnetAZ3" },
        "NetworkAclId" : {"Ref" : "InternalSubnetAcl"}
      }
    },

    "InternalSubnetAclAssociation31" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DatabaseSubnetAZ1" },
        "NetworkAclId" : {"Ref" : "InternalSubnetAcl"}
      }
    },

    "InternalSubnetAclAssociation32" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DatabaseSubnetAZ2" },
        "NetworkAclId" : {"Ref" : "InternalSubnetAcl"}
      }
    },
    "InternalSubnetAclAssociation33" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DatabaseSubnetAZ3" },
        "NetworkAclId" : {"Ref" : "InternalSubnetAcl"}
      }
    },

    "InternalSubnetAclAssociation41" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PresentationSubnetAZ1" },
        "NetworkAclId" : {"Ref" : "InternalSubnetAcl"}
      }
    },
    "InternalSubnetAclAssociation42" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PresentationSubnetAZ2" },
        "NetworkAclId" : {"Ref" : "InternalSubnetAcl"}
      }
    },
    "InternalSubnetAclAssociation43" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PresentationSubnetAZ3" },
        "NetworkAclId" : {"Ref" : "InternalSubnetAcl"}
      }
    },

    "S3Endpoint" : {
      "Type" : "AWS::EC2::VPCEndpoint",
      "Properties" : {
        "PolicyDocument" : {
          "Version":"2012-10-17",
          "Statement":[{
            "Effect":"Allow",
            "Principal": "*",
            "Action": "*",
            "Resource": "*"
          }]
        },
        "RouteTableIds" : [ {"Ref" : "InternetRouteTable"}, {"Ref" : "InternalRouteTableAZ1"}, {"Ref" : "InternalRouteTableAZ2"}, {"Ref" : "InternalRouteTableAZ3"}],
        "ServiceName" : { "Fn::Join": [ "", [ "com.amazonaws.", { "Ref": "AWS::Region" }, ".s3" ] ] },
        "VpcId" : {"Ref" : "VPC"}
      }
    },

    "ElasticacheSubnetGroup" : {
        "Type" : "AWS::ElastiCache::SubnetGroup",
        "Properties" : {
            "Description" : "Default Cache Subnet Group",
            "SubnetIds" : [ { "Ref" : "DatabaseSubnetAZ1" }, { "Ref" : "DatabaseSubnetAZ2" }, { "Ref" : "DatabaseSubnetAZ3" } ]
        }
    },

    "RDSDBSubnetGroup" : {
       "Type" : "AWS::RDS::DBSubnetGroup",
       "Properties" : {
          "DBSubnetGroupDescription" : "Default DB Subnet Group",
          "SubnetIds" : [ { "Ref" : "DatabaseSubnetAZ1" }, { "Ref" : "DatabaseSubnetAZ2" }, { "Ref" : "DatabaseSubnetAZ3" } ],
          "Tags" : [
            {
              "Key" : "Name",
              "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AppName" }, { "Ref" : "EnvironmentName" },"internal"] ] }
            },
            {
              "Key" : "layer",
              "Value" : "database"
            },
            {
              "Key" : "purpose",
              "Value" : "database subnet group"
            },
            {
              "Key" : "stack",
              "Value" : { "Ref" : "EnvironmentName" }
            }
          ]
        }
    },
    "RedshiftClusterSubnetGroup" : {
      "Type": "AWS::Redshift::ClusterSubnetGroup",
      "Properties": {
        "Description" : "Default Cluster Subnet Group",
        "SubnetIds" : [ { "Ref" : "DatabaseSubnetAZ1" }, { "Ref" : "DatabaseSubnetAZ2" }, { "Ref" : "DatabaseSubnetAZ3" } ]
      }
    }

  },

  "Outputs" : {

    "VPC" : {
      "Description" : "VPC",
      "Value" : {"Ref" : "VPC"}
    },

    "InternetSubnets" : {
      "Description" : "Internet Subnets",
      "Value" : { "Fn::Join":["", [
      {"Ref" : "InternetLoadBalancerSubnetAZ1" }, ",",
      {"Ref" : "InternetLoadBalancerSubnetAZ2" }, ",",
      {"Ref" : "InternetLoadBalancerSubnetAZ3" }
        ]]}
    },

    "InternalSubnets" : {
      "Description" : "Internal Subnets",
      "Value" : { "Fn::Join":["", [
      {"Ref" : "PresentationSubnetAZ1" }, ",",
      {"Ref" : "PresentationSubnetAZ2" }, ",",
      {"Ref" : "PresentationSubnetAZ3" }, ",",
      {"Ref" : "ApplicationSubnetAZ1" }, ",",
      {"Ref" : "ApplicationSubnetAZ2" }, ",",
      {"Ref" : "ApplicationSubnetAZ3" }, ",",
      {"Ref" : "InternalLoadBalancerSubnetAZ1" }, ",",
      {"Ref" : "InternalLoadBalancerSubnetAZ2" }, ",",
      {"Ref" : "InternalLoadBalancerSubnetAZ3" }, ",",
      {"Ref" : "DatabaseSubnetAZ1" }, ",",
      {"Ref" : "DatabaseSubnetAZ2" }, ",",
      {"Ref" : "DatabaseSubnetAZ3" }
        ]]}
    }

  }


}
